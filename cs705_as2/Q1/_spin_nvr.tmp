never safety {    /* !([] ((ncrit<=1))) */
T0_init:
	do
	:: atomic { (! (((ncrit<=1)))) -> assert(!(! (((ncrit<=1))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never liveness1_pid0 {    /* !([] ((! (flag[0])) || ((<> ((ncrit==1))) && ((_pid==0))))) */
T0_init:
	do
	:: (! ((! (flag[0]))) && ! (((ncrit==1)))) -> goto accept_S5
	:: atomic { (! ((! (flag[0]))) && ! (((_pid==0)))) -> assert(!(! ((! (flag[0]))) && ! (((_pid==0))))) }
	:: (1) -> goto T0_init
	od;
accept_S5:
	do
	:: (! (((ncrit==1)))) -> goto accept_S5
	od;
accept_all:
	skip
}
never liveness1_pid1 {    /* !([] ((! (flag[1])) || ((<> ((ncrit==1))) && ((_pid==1))))) */
T0_init:
	do
	:: (! ((! (flag[1]))) && ! (((ncrit==1)))) -> goto accept_S5
	:: atomic { (! ((! (flag[1]))) && ! (((_pid==1)))) -> assert(!(! ((! (flag[1]))) && ! (((_pid==1))))) }
	:: (1) -> goto T0_init
	od;
accept_S5:
	do
	:: (! (((ncrit==1)))) -> goto accept_S5
	od;
accept_all:
	skip
}
never liveness2_pid0 {    /* !([] ((! ((flag[0]==0))) || ((<> ((ncrit==1))) && ((_pid==0))))) */
T0_init:
	do
	:: (! ((! ((flag[0]==0)))) && ! (((ncrit==1)))) -> goto accept_S5
	:: atomic { (! ((! ((flag[0]==0)))) && ! (((_pid==0)))) -> assert(!(! ((! ((flag[0]==0)))) && ! (((_pid==0))))) }
	:: (1) -> goto T0_init
	od;
accept_S5:
	do
	:: (! (((ncrit==1)))) -> goto accept_S5
	od;
accept_all:
	skip
}
never liveness2_pid1 {    /* !([] ((! ((flag[1]==0))) || ((<> ((ncrit==1))) && ((_pid==1))))) */
T0_init:
	do
	:: (! ((! ((flag[1]==0)))) && ! (((ncrit==1)))) -> goto accept_S5
	:: atomic { (! ((! ((flag[1]==0)))) && ! (((_pid==1)))) -> assert(!(! ((! ((flag[1]==0)))) && ! (((_pid==1))))) }
	:: (1) -> goto T0_init
	od;
accept_S5:
	do
	:: (! (((ncrit==1)))) -> goto accept_S5
	od;
accept_all:
	skip
}
